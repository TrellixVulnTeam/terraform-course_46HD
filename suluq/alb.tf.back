resource "aws_route53_record" "zuluq_inchora_r53_r" {
    zone_id = "ZMJ42EAN5RJQI"
    #name = roadtohealth.inchoratech.com
    name = "roadtohealth"
    type = "A"

    alias {
      name = module.alb.this_lb_dns_name
      zone_id = module.alb.this_lb_zone_id
      evaluate_target_health = true
    }

}
##################################################################
# ssl certificte for the domain
##################################################################
module "acm" {
  source  = "terraform-aws-modules/acm/aws"
  version = "~> 2.0"

  domain_name = var.domain # trimsuffix(data.aws_route53_zone.this.name, ".") # Terraform >= 0.12.17
  zone_id = "ZMJ42EAN5RJQI"
  //zone_id      = aws_route53_zone.main-primary-zone.id
  subject_alternative_names = ["*.${var.domain}"]

  wait_for_validation = false
}

##################################################################
# Bucket log for Application Load Balancer
##################################################################
module "log_bucket" {
  source  = "terraform-aws-modules/s3-bucket/aws"
  version = "~> 1.0"

  bucket                         = "${local.default_name}-alb-logs"
  acl                            = "log-delivery-write"
  force_destroy                  = true
  attach_elb_log_delivery_policy = true
 

  lifecycle_rule = [
    {
      id      = "log"
      enabled = true
      prefix  = "log/"

      tags = {
        rule      = "log"
        autoclean = "true"
      }

      transition = [
        {
          days          = 30
          storage_class = "ONEZONE_IA"
          }, {
          days          = 60
          storage_class = "GLACIER"
        }
      ]

      expiration = {
        days = 90
      }

      noncurrent_version_expiration = {
        days = 30
      }
    },
    {
      id                                     = "log1"
      enabled                                = true
      prefix                                 = "log1/"
      abort_incomplete_multipart_upload_days = 7

      noncurrent_version_transition = [
        {
          days          = 30
          storage_class = "STANDARD_IA"
        },
        {
          days          = 60
          storage_class = "ONEZONE_IA"
        },
        {
          days          = 90
          storage_class = "GLACIER"
        },
      ]

      noncurrent_version_expiration = {
        days = 300
      }
    },
  ] 

}

output "this_s3_bucket_id" {
  description = "The name of the bucket."
  value       = module.log_bucket.this_s3_bucket_id
}

output "this_s3_bucket_arn" {
  description = "The ARN of the bucket. Will be of format arn:aws:s3:::bucketname."
  value       = module.log_bucket.this_s3_bucket_arn
}

output "this_s3_bucket_website_endpoint" {
  description = "The website endpoint, if the bucket is configured with a website. If not, this will be an empty string."
  value       = module.log_bucket.this_s3_bucket_website_endpoint
}
output "this_s3_bucket_bucket_domain_name" {
  description = "The bucket domain name. Will be of format bucketname.s3.amazonaws.com."
  value       = module.log_bucket.this_s3_bucket_bucket_domain_name
}

##################################################################
#security group for Application Load Balancer
##################################################################

resource "aws_security_group" "suluq_vpc_sg-alb" {
  name_prefix = "alb-app-servers-${local.default_name}"
  description = "alb for application servers"
  vpc_id      = module.vpc.vpc_id

  ingress {
    #security_groups = ["${aws_security_group.suluq_vpc_sg-alb.id}"]
    from_port = 80
    to_port = 80
    protocol = "TCP"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    #security_groups = ["${aws_security_group.suluq_vpc_sg-bastion.id}"]
    from_port = 443
    to_port = 443
    protocol = "TCP"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    #security_groups = ["${aws_security_group.suluq_inchora_vpc_sg-bastion.id}"]
    from_port = 0
    to_port = 0
    protocol = "-1"
    cidr_blocks = ["0.0.0.0/0"]
   }

  tags = {
    Name =  "${local.default_name}-http-alb-sg"

  }

}
##################################################################
# Application Load Balancer
###########t#######################################################
module "alb" {
  source = "terraform-aws-modules/alb/aws"

  name = "${local.default_name}-frontend-alb"

  load_balancer_type = "application"

  vpc_id          = module.vpc.vpc_id
  #security_groups = [module.security_group.this_security_group_id]
  security_groups = [aws_security_group.suluq_vpc_sg-alb.id]
  subnets         = module.vpc.public_subnets
  
  #depends_on does not work
  #depends_on = [ module.log_bucket ]
  # See notes in README (ref: https://github.com/terraform-providers/terraform-provider-aws/issues/7987)
    access_logs = {
     bucket = module.log_bucket.this_s3_bucket_id
  }



  https_listeners = [
    {
      port               = 443
      protocol           = "HTTPS"
      certificate_arn    = module.acm.this_acm_certificate_arn
      target_group_index = 0
    },
  ]

  target_groups = [
    {
      name_prefix          = "front"
      backend_protocol     = "HTTP"
      backend_port         = 80
      target_type          = "instance"
      deregistration_delay = 10
      health_check = {
        enabled             = true
        interval            = 30
        path                = "/"
        port                = "traffic-port"
        healthy_threshold   = 3
        unhealthy_threshold = 3
        timeout             = 6
        protocol            = "HTTP"
        matcher             = "200-399"
      }
    }
   
  ]

  tags = {
    Name =  "${local.default_name}-frontend-alb"

  }
}
resource "aws_lb_listener" "front_end" {
    depends_on = [ module.alb ]
    load_balancer_arn = module.alb.this_lb_arn
    port              = 80
    protocol          = "HTTP"

    default_action {
        order = 1
        type  = "redirect"

        redirect {
            host        = "#{host}"
            path        = "/#{path}"
            port        = "443"
            protocol    = "HTTPS"
            query       = "#{query}"
            status_code = "HTTP_301"
        }
    }
}


#-----------------------------------------------------------------------------------------------------------------------
output "this_lb_id" {
  description = "The ID and ARN of the load balancer we created."
  value       = module.alb.this_lb_id
}

output "this_lb_arn" {
  description = "The ID and ARN of the load balancer we created."
  value       = module.alb.this_lb_arn
}

output "this_lb_dns_name" {
  description = "The DNS name of the load balancer."
  value       = module.alb.this_lb_dns_name
}

output "this_lb_arn_suffix" {
  description = "ARN suffix of our load balancer - can be used with CloudWatch."
  value       = module.alb.this_lb_arn_suffix
}

output "this_lb_zone_id" {
  description = "The zone_id of the load balancer to assist with creating DNS records."
  value       = module.alb.this_lb_zone_id
}

output "http_tcp_listener_arns" {
  description = "The ARN of the TCP and HTTP load balancer listeners created."
  value       = module.alb.http_tcp_listener_arns
}

output "http_tcp_listener_ids" {
  description = "The IDs of the TCP and HTTP load balancer listeners created."
  value       = module.alb.http_tcp_listener_ids
}

output "https_listener_arns" {
  description = "The ARNs of the HTTPS load balancer listeners created."
  value       = module.alb.https_listener_arns
}

output "https_listener_ids" {
  description = "The IDs of the load balancer listeners created."
  value       = module.alb.https_listener_ids
}

output "target_group_arns" {
  description = "ARNs of the target groups. Useful for passing to your Auto Scaling group."
  value       = module.alb.target_group_arns
}

output "target_group_arn_suffixes" {
  description = "ARN suffixes of our target groups - can be used with CloudWatch."
  value       = module.alb.target_group_arn_suffixes
}

output "target_group_names" {
  description = "Name of the target group. Useful for passing to your CodeDeploy Deployment Group."
  value       = module.alb.target_group_names
}

#------------------------------------------------------------------------------------------------------------
