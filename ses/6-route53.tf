#------------------------------------------------------------------------------------------
data "aws_route53_zone" "main-zone" {
  name = "inecsoft.co.uk"
  #private_zone = true
}
#------------------------------------------------------------------------------------------
#invalid value for domain (cannot end with a period)
#------------------------------------------------------------------------------------------
resource "aws_route53_zone" "cloud-zone" {
  name          = var.domain
  comment       = "zone sub domain for SES"
  force_destroy = true

  tags = {
    Name = "${local.default_name}-cloud-zone"
  }
}
#------------------------------------------------------------------------------------------
#When DNS queries the subdomain, I checks the parent domain first for name servers (NS) records.
#So, the subdomain NS records need to be on the main domain.
#------------------------------------------------------------------------------------------
resource "aws_route53_record" "cloud-zone-ns-rec" {
  zone_id = data.aws_route53_zone.main-zone.zone_id
  name    = var.domain
  type    = "NS"
  ttl     = "300"
  records = aws_route53_zone.cloud-zone.name_servers
}
#------------------------------------------------------------------------------------------
resource "aws_route53_record" "cloud-zone-A-rec" {
  zone_id = aws_route53_zone.cloud-zone.zone_id
  name    = var.domain
  type    = "A"
  ttl     = "300"
  records = ["217.160.0.151"]
}
#------------------------------------------------------------------------------------------
#------------------------------------------------------------------------------------------
# Example SES Domain Identity
#terraform import aws_ses_domain_identity.ses-domain-identity cloud.inecsoft.co.uk
#------------------------------------------------------------------------------------------
resource "aws_ses_domain_identity" "ses-domain-identity" {
  domain = var.domain
  #domain = cloud.inecsoft.co.uk
}
#------------------------------------------------------------------------------------------
output "ses-domain-identity-verification-token" {
  description = "A code which when added to the domain as a TXT record will signal to SES that the owner of the domain has authorised SES to act on their behalf. The domain identity will be in state \"verification pending\" until this is done."
  value       = aws_ses_domain_identity.ses-domain-identity.verification_token
}
#------------------------------------------------------------------------------------------
#terraform import aws_ses_domain_dkim.domain-dkim cloud.inecsoft.co.uk
#------------------------------------------------------------------------------------------
resource "aws_ses_domain_dkim" "domain-dkim" {
  domain = aws_ses_domain_identity.ses-domain-identity.domain
}
#------------------------------------------------------------------------------------------
output "output" {
  description = "DKIM tokens generated by SES. These tokens should be used to create CNAME records used to verify SES Easy DKIM"
  value       = aws_ses_domain_dkim.domain-dkim.dkim_tokens
}
#------------------------------------------------------------------------------------------
#on the records part add the . at the end for safety measures
##------------------------------------------------------------------------------------------
resource "aws_route53_record" "ses_amazonses_dkim_record" {
  count   = 3
  zone_id = aws_route53_zone.cloud-zone.zone_id
  name    = "${element(aws_ses_domain_dkim.domain-dkim.dkim_tokens, count.index)}._domainkey.${var.domain}"
  type    = "CNAME"
  ttl     = "1800"
  records = ["${element(aws_ses_domain_dkim.domain-dkim.dkim_tokens, count.index)}.dkim.amazonses.com"]
}
#------------------------------------------------------------------------------------------
# Example Route53 MX record
#------------------------------------------------------------------------------------------
resource "aws_route53_record" "ses-domain-mail-mx-rec" {
  zone_id = aws_route53_zone.cloud-zone.id
  name    = var.domain
  type    = "MX"
  ttl     = "1800"
  # Change to the region in which `aws_ses_domain_identity.example` is created
  records = ["10 inbound-smtp.${var.AWS_REGION}.amazonaws.com"]
}
#------------------------------------------------------------------------------------------
# Example Route53 TXT record for SPF
#------------------------------------------------------------------------------------------
resource "aws_route53_record" "ses-domain-mail-txt-rec" {
  zone_id = aws_route53_zone.cloud-zone.zone_id
  name    = "_amazonses.${var.domain}"
  type    = "TXT"
  ttl     = "1800"
  records = [aws_ses_domain_identity.ses-domain-identity.verification_token]
  #records = [ "v=spf1 a mx -all" ]
}
#------------------------------------------------------------------------------------------
