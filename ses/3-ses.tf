#------------------------------------------------------------------------------------------
# Example SES Domain Identity
#terraform import aws_ses_domain_identity.ses-domain-identity cloud.inecsoft.co.uk
#------------------------------------------------------------------------------------------
resource "aws_ses_domain_identity" "ses-domain-identity" {
  domain = var.domain
  #domain = cloud.inecsoft.co.uk
}
#------------------------------------------------------------------------------------------
output "ses-domain-identity-verification-token" {
  description = "A code which when added to the domain as a TXT record will signal to SES that the owner of the domain has authorised SES to act on their behalf. The domain identity will be in state \"verification pending\" until this is done."
  value       = aws_ses_domain_identity.ses-domain-identity.verification_token
}
#------------------------------------------------------------------------------------------
#terraform import aws_ses_domain_dkim.domain-dkim cloud.inecsoft.co.uk
#------------------------------------------------------------------------------------------
resource "aws_ses_domain_dkim" "domain-dkim" {
  domain = aws_ses_domain_identity.ses-domain-identity.domain
}
#------------------------------------------------------------------------------------------
output "output" {
  description = "DKIM tokens generated by SES. These tokens should be used to create CNAME records used to verify SES Easy DKIM"
  value       = aws_ses_domain_dkim.domain-dkim.dkim_tokens
}
#------------------------------------------------------------------------------------------
#on the records part add the . at the end for safety measures
##------------------------------------------------------------------------------------------
resource "aws_route53_record" "ses_amazonses_dkim_record" {
  count   = 3
  zone_id = aws_route53_zone.cloud-zone.zone_id
  name    = "${element(aws_ses_domain_dkim.domain-dkim.dkim_tokens, count.index)}._domainkey.${var.domain}"
  type    = "CNAME"
  ttl     = "1800"
  records = ["${element(aws_ses_domain_dkim.domain-dkim.dkim_tokens, count.index)}.dkim.amazonses.com"]
}
#------------------------------------------------------------------------------------------
# Example Route53 MX record
#------------------------------------------------------------------------------------------
resource "aws_route53_record" "ses-domain-mail-mx-rec" {
  zone_id = aws_route53_zone.cloud-zone.id
  name    = var.domain
  type    = "MX"
  ttl     = "1800"
  # Change to the region in which `aws_ses_domain_identity.example` is created
  records = ["10 inbound-smtp.${var.AWS_REGION}.amazonaws.com"]
}
#------------------------------------------------------------------------------------------
# Example Route53 TXT record for SPF
#------------------------------------------------------------------------------------------
resource "aws_route53_record" "ses-domain-mail-txt-rec" {
  zone_id = aws_route53_zone.cloud-zone.zone_id
  name    = "_amazonses.${var.domain}"
  type    = "TXT"
  ttl     = "1800"
  records = [aws_ses_domain_identity.ses-domain-identity.verification_token]
}
#------------------------------------------------------------------------------------------
# terraform import aws_ses_email_identity.example email@example.com
#check your email 
#------------------------------------------------------------------------------------------
resource "aws_ses_email_identity" "ses-email-identity" {
  email = "ivanpedrouk@gmail.com"
}
#------------------------------------------------------------------------------------------
resource "aws_ses_identity_notification_topic" "ses-identity-notification-topic-bounce" {
  topic_arn                = aws_sns_topic.sns-topic-ses-notification.arn
  notification_type        = "Bounce"
  identity                 = aws_ses_domain_identity.ses-domain-identity.domain
  include_original_headers = true
}
#------------------------------------------------------------------------------------------
resource "aws_ses_identity_notification_topic" "ses-identity-notification-topic-complaint" {
  topic_arn                = aws_sns_topic.sns-topic-ses-notification.arn
  notification_type        = "Complaint"
  identity                 = aws_ses_domain_identity.ses-domain-identity.domain
  include_original_headers = true
}
#------------------------------------------------------------------------------------------
# resource "aws_ses_identity_notification_topic" "ses-identity-notification-topic-delivery" {
#   topic_arn                = aws_sns_topic.sns-topic-ses-notification.arn
#   notification_type        = "Delivery"
#   identity                 = aws_ses_domain_identity.ses-domain-identity.domain 
#   include_original_headers = true
# }
#------------------------------------------------------------------------------------------
#------------------------------------------------------------------------------------------
# resource "aws_ses_configuration_set" "ses-configuration-set" {
#   name = "${local.default_name}-ses-configuration-set"
# }
# #------------------------------------------------------------------------------------------
# #SNS Destination
# #------------------------------------------------------------------------------------------
# resource "aws_ses_event_destination" "event-destination-sns" {
#   name                   = "${local.default_name}-event-destination-sns"
#   configuration_set_name = aws_ses_configuration_set.ses-configuration-set.name
#   enabled                = true
#   matching_types         = ["bounce", "send"]

#   sns_destination {
#     topic_arn = aws_sns_topic.sns-topic-ses-notification.arn
#   }
# }
#------------------------------------------------------------------------------------------
#------------------------------------------------------------------------------------------
# data "aws_iam_policy_document" "policy-doc" {
#   statement {
#     actions   = ["SES:SendEmail", "SES:SendRawEmail"]
#     resources = [aws_ses_domain_identity.ses-domain-identity.arn]

#     principals {
#       identifiers = ["*"]
#       type        = "AWS"
#     }
#   }
# }
# #------------------------------------------------------------------------------------------
# resource "aws_ses_identity_policy" "ses-identity-policy" {
#   identity = aws_ses_domain_identity.ses-domain-identity.arn
#   name     = "user-${random_uuid.uuid.result}"
#   policy   = data.aws_iam_policy_document.policy-doc.json
# }
#------------------------------------------------------------------------------------------
output "uuid" {
  description = "generator of uuid"
  value       = random_uuid.uuid.result
}
#------------------------------------------------------------------------------------------
output "interger" {
  description = "generator of interger"
  value       = random_integer.interger.result
}
#------------------------------------------------------------------------------------------
